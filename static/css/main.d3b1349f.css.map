{"version":3,"file":"static/css/main.d3b1349f.css","mappings":"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","sources":["index.scss","components/Header/header.scss","palette.scss","include-media.scss","components/Readme/readme.scss","components/Links/links.scss","components/Skills/chart.scss","components/Row/row.scss","components/ProgressSkill/progress-skills.scss","components/Skills/skills.scss","components/Career/career.scss","components/Education/education.scss","components/Skeleton/skeleton.scss","App.scss"],"sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n@font-face {\n  font-family: 'ComputerFont';\n  src: url('./static/fonts/Computerfont.ttf') format('truetype');\n  font-display: swap;\n}","@import \"../../palette.scss\";\n@import '../../include-media.scss';\n\n@mixin title_definition {\n  font-family: \"ComputerFont\", sans-serif;\n  h1 {\n    margin: 0px;\n    font-size: 10vw;\n    color: $title-color;\n  }\n}\n\n@keyframes fadein {\n  0% { opacity: 0; }\n  100% { opacity: 1; }\n}\n\n.header {\n  position: relative;\n  clip-path: polygon(0 0, 100% 0, 100% calc(100% - 5vw), 0 99%);\n\n  &__image {\n    width: 100%;\n  }\n\n  .names {\n    position: absolute;\n    top: 35%;\n    left: 55%;\n    line-height: 8.2vw;\n\n    &__firstname {\n      @include title_definition;\n      margin-left: -20%;\n    }\n\n    &__lastname {\n      @include title_definition;\n    }\n\n    @include media(\">=tablet\") {\n      &__subtitle {\n        line-height: normal;\n        position: absolute;\n        width: 100%;\n        text-align: right;\n        font-size: 1.3vw;\n        color: $title-color;\n        animation-name: fadein;\n        animation-duration: 3s;\n        ul {\n          margin: 0px;\n          list-style: none;\n        }\n      }\n    }\n\n    @include media(\"<tablet\") {\n      &__subtitle {\n        display: none;\n      }\n    }\n  }\n}\n","$title-color: #2c3e50;","\n@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",".readme {\n  color: $title-color;\n  padding-top: 32px;\n  &__title {\n    @include title_definition;\n    font-size: calc(10vmin);\n    padding: 0px 25vw;\n    text-align: left;\n  }\n  &__text {\n    padding: 0px 25vw;\n    text-align: left;\n  }\n\n  &__skeleton {\n    padding: 0px 25vw;\n  }\n}\n\n@include media('<tablet') {\n  .readme {\n    &__title, &__text, &__skeleton {\n      padding: 0px 12vw;\n    }\n  }\n}","@include media(\">=tablet\") {\n  .links--small-screen {\n    display: none;\n  }\n  .links--big-screen {\n    position: relative;\n    .links {\n      height: 28px;\n      width: max-content;\n      position: absolute;\n      right: 6px;\n      top: -4vw;\n      transform: rotate(-3deg);\n\n      svg {\n        color: $title-color;\n        height: 2vw;\n        min-height: 25px;\n        margin-right: 12px;\n      }\n    }\n  }\n}\n\n@include media(\"<tablet\") {\n  .links--big-screen {\n    display: none;\n  }\n  .links--small-screen {\n    position: relative;\n    .links {\n      position: absolute;\n      margin: 24px 0px;\n      left: 50%;\n      transform: translateX(-50%);\n      svg {\n        color: $title-color;\n        height: 2vw;\n        min-height: 25px;\n        margin-right: 12px;\n      }\n    }\n  }\n}\n","@include media(\">=tablet\") {\n  .progress-skills {\n    display: none;\n  }\n}\n\n.radar {\n  position: relative;\n  margin-top: 100px;\n  &__title {\n    @include title_definition;\n    padding: 0px 25vw;\n    font-size: calc(10vmin);\n    text-align: left;\n    color: $title-color;\n  }\n  &__text {\n    padding: 0px 25vw;\n    text-align: left;\n    color: $title-color;\n  }\n\n  &__chart {\n    width: 35%;\n\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n  }\n\n  &__skeleton {\n    padding: 0px 25vw;\n  }\n}\n\n@include media(\">=tablet\", \"<=desktop\") {\n  .radar {\n    &__chart {\n      width: 60%;\n    }\n  }\n  .radar--height {\n    height: 850px;\n  }\n}\n\n@include media(\">desktop\", \"<=1400px\") {\n  .radar {\n    &__chart {\n      width: 50%;\n    }\n  }\n}\n\n\n@include media(\">=desktop\") {\n  .radar--height {\n    height: 850px;\n  }\n}\n\n@include media('<tablet') {\n  .radar {\n    &__chart {\n      display: none;\n    }\n\n    &__title, &__text, &__skeleton {\n      padding: 0px 12vw;\n    }\n  }\n}",".row {\n  display: flex;\n  flex-direction: row;\n}","@mixin skillstep {\n  background-color: #ccc;\n  flex: 1;\n  border: 1px solid #ededed;\n  height: 50%;\n  align-self: flex-end;  \n\n}\n\n@include media (\"<tablet\") {\n  .progress-skills {\n    display: block;\n    margin-top: 24px;\n\n    &__title {\n      padding: 0px 12vw;\n      font-size: calc(5vmin);\n      text-align: left;\n      color: $title-color;\n    }\n\n    &__steps {\n      display: flex;\n      height: 25px;\n      margin: 6px 12vw;\n    }\n\n    &__levels {\n      display: flex;\n      height: 25px;\n      margin: 6px 12vw;\n      flex-wrap: nowrap;\n    }\n\n    &__level {\n      flex: 1 1 33%;\n      align-self: flex-start;  \n    }\n    &__step {\n      @include skillstep;\n\n      &--paint {\n        @include skillstep;\n        background-color: $title-color;\n      }\n    }\n  }\n}","@keyframes bounce {\n  0%,\n  20%,\n  50%,\n  80%,\n  100% {\n    transform: translateY(0);\n  }\n  40% {\n    transform: translateY(-20px);\n  }\n  60% {\n    transform: translateY(-15px);\n  }\n}\n\n@mixin skills {\n  height: auto;\n  max-height: 440px;\n  overflow: hidden;\n  transition: max-height 5s linear;\n  --webkit-transition: max-height 5sec linear;\n  position: relative;\n  margin-bottom: 64px;\n  color: $title-color;\n}\n\n.skills {\n  @include skills;\n\n  &:after {\n    content: \"\";\n    position: absolute;\n    z-index: 1;\n    bottom: 0;\n    left: 0;\n    pointer-events: none;\n    background-image: linear-gradient(\n      to bottom,\n      rgba(255, 255, 255, 0),\n      rgba(255, 255, 255, 1) 90%\n    );\n    width: 100%;\n    height: 4em;\n  }\n\n  &__button {\n    position: absolute;\n    left: 50%;\n    transform: translateX(-50%);\n    top: 400px;\n    z-index: 2;\n\n    button {\n      cursor: pointer;\n      border: none;\n      padding: 12px;\n      border-radius: 10px;\n      color: #fff;\n      background-color: $title-color;\n      animation: bounce 2s ease infinite;\n    }\n  }\n\n  &--expanded {\n    @include skills;\n    max-height: max-content;\n    padding-bottom: 64px;\n    .skills__button {\n      top: 96%;\n      button {\n        animation: none;\n      }\n    }\n  }\n}\n\n@include media(\">=tablet\") {\n  .skills {\n    &--expanded {\n      display: none;\n    }\n  }\n}\n",".career {\n  flex: 1 1 calc(50% - 80px);\n  margin: 35px;\n  &__title {\n    @include title_definition;\n    // padding: 0px 25vw;\n    font-size: calc(10vmin);\n    text-align: left;\n    color: $title-color;\n  }\n\n  .jobs {\n    .job {\n      &__title,\n      &__description {\n        // padding: 0px 25vw;\n        text-align: left;\n        width: 100%;\n      }\n      &__title {\n        font-size: calc(2.8vmin);\n        color: $title-color;\n        &::after {\n          content: \" \";\n          background-color: $title-color;\n          height: 4px;\n          display: block;\n          margin-top: 6px;\n        }\n      }\n      &__description {\n        margin-top: 12px;\n        margin-bottom: 24px;\n        color: $title-color;\n      }\n    }\n  }\n}\n\n@include media(\"<tablet\") {\n  .career {\n    .jobs {\n      .job {\n        &__title {\n          font-size: calc(5vmin);\n        }\n      }\n    }\n  }\n}\n",".education {\n  flex: 1 1 calc(50% - 80px);\n  margin: 35px;\n  &__title {\n    @include title_definition;\n    font-size: calc(10vmin);\n    text-align: left;\n    color: $title-color;\n  }\n\n  .degrees {\n    .degree {\n      &__title,\n      &__description {\n        text-align: left;\n        width: 100%;\n      }\n      &__title {\n        font-size: calc(2.8vmin);\n        color: $title-color;\n        &::after {\n          content: \" \";\n          background-color: $title-color;\n          height: 4px;\n          display: block;\n          margin-top: 6px;\n        }\n      }\n      &__description {\n        color: $title-color;\n        margin-top: 12px;\n        margin-bottom: 24px;\n        white-space: pre-line;\n        .degree__paper {\n          margin-left: 6px;\n        }\n      }\n    }\n  }\n}\n\n@include media(\"<tablet\") {\n  .education {\n    .degrees {\n      .degree {\n        &__title {\n          font-size: calc(5vmin);\n        }\n      }\n    }\n  }\n}\n",".skeleton {\n  &__row--first,\n  &__row--second,\n  &__row--third,\n  &__row--fourth {\n    background: #eee;\n    color: #eee;\n    height: 10px;\n    margin: 10px 0px;\n    width: 100%;\n    border-radius: 25px;\n    position: relative;\n    &::before {\n      content: \"\";\n      position: absolute;\n      border-radius: 25px;\n      background: linear-gradient(\n        90deg,\n        transparent,\n        transparent,\n        rgba(255, 255, 255, 0.5)\n      );\n      width: 50%;\n      height: 10px;\n      animation: loading 1.2s infinite;\n    }\n  }\n  &__row--second,\n  &__row--fourth {\n    width: 95%;\n  }\n\n  &__row--third {\n    width: 100%;\n  }\n}\n\n@keyframes loading {\n  0% {\n    transform: translateX(-100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n}\n","@import './components/components.scss';\n\n.App {\n  height: 100%;\n}\n\n.career-education {\n  display: flex;\n  padding: 10px;\n  overflow: hidden;\n  flex-wrap: wrap;\n  align-items: flex-start;\n}"],"names":[],"sourceRoot":""}